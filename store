#! /usr/bin/perl
# Author : abracadabra;
# Package files(new and modified) and update to servers(192.168.1.30)
# And if there is any modification ,the modofied ones would be updated .
# Remember to remove useless things ;
# store_all to store all files .
use strict ;
use File::Basename;
use File::Spec::Functions;
##
=ccut
    Backup files to servers every Tuesday and Friday
=cut
my($sec,$min, $hour,$day,$month,$year,$wday,$yday,$lsdst) = localtime time;
&backup() if($wday == 2 or @ARGV[0] eq '-u');

sub backup{
    &store_all() ;
    push @ARGV, "STORE";
    $^I = ".bak";
    while(<>){
	print,next,if(/^&backup/
		      && (s/2/5/g || s/5/2/g));
	print;
    }
    pop @ARGV;
    unlink 'STORE.bak' or die "$!";
    
}

##
open PHI_NEW, '>',".phi_new" or die "Oops :$! ";
open PHI, '<', ".phi" or die "Oops :$! ";

my $dir = ".";
my %hash;

for(<PHI>){
    chomp;
    /\s/
	&& ($hash{"$'"} = $`);
}

#-- To store all or not 
if(@ARGV[0] eq '-all'){
    &store_all();
    chdir "/home/gaoang/Perl" or die "Oops again--ain.. $!";
    system "scp -r BackUp/home gaoang\@192.168.1.30:/home/gaoang/BackUp/";
    exit 0 ;
}else{
    &checkout();
}

#----
sub checkout{
    for(sort <.* *>){
	if(-f){
	    next if(/^.phi/);
	    unlink if(/\~$/);
	    my $dirname = File::Spec->rel2abs($_) ;
	    my(@info) = stat($_);

	    # write new timelog to .phi 
	    print PHI_NEW "$info[9] $dirname\n" if -f ;	
	    if($hash{$dirname} != $info[9]){
		printf  "%25s, %-1s",  "$_:",
		"<old,new> modified time: < $hash{$_},$info[9] > \n";
		push @ARGV, $dirname;
	    }
	}

	chdir $_ ,&checkout() ,chdir '..' if(-d && !($_ =~ /^\./));
    }
}

if(@ARGV){
    chdir "/home/gaoang/Perl" or die "Oops again--ain.. $!";
    my $this_time = join "_", (split(/\s|\:/, localtime));
    system "tar czvf perlupdate_$this_time.tar.gz @ARGV";
    system "scp -r perlupdate_$this_time.tar.gz gaoang\@192.168.1.30:/home/gaoang/BackUp/ ";
    unlink "perlupdate_$this_time.tar.gz", ".phi" or die "Can't unlink : $! ";
    rename ".phi_new", ".phi" or die "Cannot rename : $!";
    exit 0;
}



print
    "******************************\n".
    "No file was modified !\n".
    "******************************";

print "\n";

our $counter = 0;
sub store_all{
    for(<*>){
	next if (m/BackUp/);
	if(-d){
	    my $dirname = File::Spec->rel2abs($_) ;
	    my $newdir = "/home/gaoang/Perl/BackUp$dirname";
	    unless(-d $newdir){
		`mkdir $newdir`;
		print "Cread new dir", $dirname;
		print "\n";
	    }
	}
	
	chdir $_ ,&store_all() ,chdir '..' if(-d && !($_ =~ /^\./));

	if(-f){
	    my $dirname = File::Spec->rel2abs($_) ;
	    ($dirname =~ s/$_//g);
	    my $newdir = "/home/gaoang/Perl/BackUp$dirname";
	    print "Hit ", $counter++, " : $_ \n";
	    `cp "$_" $newdir`;
	}
	
    }
}
